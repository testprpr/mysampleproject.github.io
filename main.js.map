{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/_components/alert.component.ts","./src/app/_components/alert.component.html","./src/app/_components/index.ts","./src/app/_helpers/app.initializer.ts","./src/app/_helpers/auth.guard.ts","./src/app/_helpers/error.interceptor.ts","./src/app/_helpers/fake-backend.ts","./src/app/_helpers/index.ts","./src/app/_helpers/jwt.interceptor.ts","./src/app/_helpers/must-match.validator.ts","./src/app/_models/account.ts","./src/app/_models/alert.ts","./src/app/_models/index.ts","./src/app/_models/role.ts","./src/app/_services/account.service.ts","./src/app/_services/alert.service.ts","./src/app/_services/index.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/home/index.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { Alert, AlertType } from '@app/_models';\nimport { AlertService } from '@app/_services';\n\n@Component({ selector: 'alert', templateUrl: 'alert.component.html' })\nexport class AlertComponent implements OnInit, OnDestroy {\n    @Input() id = 'default-alert';\n    @Input() fade = true;\n\n    alerts: Alert[] = [];\n    alertSubscription: Subscription;\n    routeSubscription: Subscription;\n\n    constructor(private router: Router, private alertService: AlertService) { }\n\n    ngOnInit() {\n        // subscribe to new alert notifications\n        this.alertSubscription = this.alertService.onAlert(this.id)\n            .subscribe(alert => {\n                // clear alerts when an empty alert is received\n                if (!alert.message) {\n                    // filter out alerts without 'keepAfterRouteChange' flag\n                    this.alerts = this.alerts.filter(x => x.keepAfterRouteChange);\n\n                    // remove 'keepAfterRouteChange' flag on the rest\n                    this.alerts.forEach(x => delete x.keepAfterRouteChange);\n                    return;\n                }\n\n                // add alert to array\n                this.alerts.push(alert);\n\n                // auto close alert if required\n                if (alert.autoClose) {\n                    setTimeout(() => this.removeAlert(alert), 3000);\n                }\n           });\n\n        // clear alerts on location change\n        this.routeSubscription = this.router.events.subscribe(event => {\n            if (event instanceof NavigationStart) {\n                this.alertService.clear(this.id);\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        // unsubscribe to avoid memory leaks\n        this.alertSubscription.unsubscribe();\n        this.routeSubscription.unsubscribe();\n    }\n\n    removeAlert(alert: Alert) {\n        // check if already removed to prevent error on auto close\n        if (!this.alerts.includes(alert)) return;\n\n        if (this.fade) {\n            // fade out alert\n            alert.fade = true;\n\n            // remove alert after faded out\n            setTimeout(() => {\n                this.alerts = this.alerts.filter(x => x !== alert);\n            }, 250);\n        } else {\n            // remove alert\n            this.alerts = this.alerts.filter(x => x !== alert);\n        }\n    }\n\n    cssClasses(alert: Alert) {\n        if (!alert) return;\n\n        const classes = ['alert', 'alert-dismissable'];\n                \n        const alertTypeClass = {\n            [AlertType.Success]: 'alert alert-success',\n            [AlertType.Error]: 'alert alert-danger',\n            [AlertType.Info]: 'alert alert-info',\n            [AlertType.Warning]: 'alert alert-warning'\n        }\n\n        classes.push(alertTypeClass[alert.type]);\n\n        if (alert.fade) {\n            classes.push('fade');\n        }\n\n        return classes.join(' ');\n    }\n}","<div *ngIf=\"alerts.length\" class=\"container\">\n    <div class=\"m-3\">\n        <div *ngFor=\"let alert of alerts\" class=\"{{cssClasses(alert)}}\">\n            <a class=\"close\" (click)=\"removeAlert(alert)\">&times;</a>\n            <span [innerHTML]=\"alert.message\"></span>\n        </div>\n    </div>\n</div>\n","export * from './alert.component';\n","import { AccountService } from '@app/_services';\n\nexport function appInitializer(accountService: AccountService) {\n    return () => new Promise(resolve => {\n        // attempt to refresh token on app start up to auto authenticate\n        accountService.refreshToken()\n            .subscribe()\n            .add(resolve);\n    });\n}","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\nimport { AccountService } from '@app/_services';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private accountService: AccountService\n    ) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const account = this.accountService.accountValue;\n        if (account) {\n            // check if route is restricted by role\n            if (route.data.roles && !route.data.roles.includes(account.role)) {\n                // role not authorized so redirect to home page\n                this.router.navigate(['/']);\n                return false;\n            }\n\n            // authorized so return true\n            return true;\n        }\n\n        // not logged in so redirect to login page with the return url \n        this.router.navigate(['/account/login'], { queryParams: { returnUrl: state.url }});\n        return false;\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AccountService } from '@app/_services';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private accountService: AccountService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(catchError(err => {\n            if ([401, 403].includes(err.status) && this.accountService.accountValue) {\n                // auto logout if 401 or 403 response returned from api\n                this.accountService.logout();\n            }\n\n            const error = (err && err.error && err.error.message) || err.statusText;\n            console.error(err);\n            return throwError(error);\n        }))\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor, HTTP_INTERCEPTORS, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { delay, materialize, dematerialize } from 'rxjs/operators';\n\nimport { AlertService } from '@app/_services';\nimport { Role } from '@app/_models';\n\n// array in local storage for accounts\nconst accountsKey = 'my-sample-project';\nlet accounts = JSON.parse(localStorage.getItem(accountsKey)) || [];\n\n@Injectable()\nexport class FakeBackendInterceptor implements HttpInterceptor {\n    constructor(private alertService: AlertService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        const { url, method, headers, body } = request;\n        const alertService = this.alertService;\n\n        return handleRoute();\n\n        function handleRoute() {\n            switch (true) {\n                case url.endsWith('/accounts/authenticate') && method === 'POST':\n                    return authenticate();\n                case url.endsWith('/accounts/refresh-token') && method === 'POST':\n                    return refreshToken();\n                case url.endsWith('/accounts/revoke-token') && method === 'POST':\n                    return revokeToken();\n                case url.endsWith('/accounts/register') && method === 'POST':\n                    return register();\n                case url.endsWith('/accounts/verify-email') && method === 'POST':\n                    return verifyEmail();\n                case url.endsWith('/accounts/forgot-password') && method === 'POST':\n                    return forgotPassword();\n                case url.endsWith('/accounts/validate-reset-token') && method === 'POST':\n                    return validateResetToken();\n                case url.endsWith('/accounts/reset-password') && method === 'POST':\n                    return resetPassword();\n                case url.endsWith('/accounts') && method === 'GET':\n                    return getAccounts();\n                case url.match(/\\/accounts\\/\\d+$/) && method === 'GET':\n                    return getAccountById();\n                case url.endsWith('/accounts') && method === 'POST':\n                    return createAccount();\n                case url.match(/\\/accounts\\/\\d+$/) && method === 'PUT':\n                    return updateAccount();\n                case url.match(/\\/accounts\\/\\d+$/) && method === 'DELETE':\n                    return deleteAccount();\n                default:\n                    // pass through any requests not handled above\n                    return next.handle(request);\n            }    \n        }\n\n        // route functions\n\n        function authenticate() {\n            const { email, password } = body;\n            const account = accounts.find(x => x.email === email && x.password === password && x.isVerified);\n            \n            if (!account) return error('Email or password is incorrect');\n\n            // add refresh token to account\n            account.refreshTokens.push(generateRefreshToken());\n            localStorage.setItem(accountsKey, JSON.stringify(accounts));\n\n            return ok({\n                ...basicDetails(account),\n                jwtToken: generateJwtToken(account)\n            });\n        }\n\n        function refreshToken() {\n            const refreshToken = getRefreshToken();\n            \n            if (!refreshToken) return unauthorized();\n\n            const account = accounts.find(x => x.refreshTokens.includes(refreshToken));\n            \n            if (!account) return unauthorized();\n\n            // replace old refresh token with a new one and save\n            account.refreshTokens = account.refreshTokens.filter(x => x !== refreshToken);\n            account.refreshTokens.push(generateRefreshToken());\n            localStorage.setItem(accountsKey, JSON.stringify(accounts));\n\n            return ok({\n                ...basicDetails(account),\n                jwtToken: generateJwtToken(account)\n            });\n\n        }\n\n        function revokeToken() {\n            if (!isAuthenticated()) return unauthorized();\n            \n            const refreshToken = getRefreshToken();\n            const account = accounts.find(x => x.refreshTokens.includes(refreshToken));\n            \n            // revoke token and save\n            account.refreshTokens = account.refreshTokens.filter(x => x !== refreshToken);\n            localStorage.setItem(accountsKey, JSON.stringify(accounts));\n\n            return ok();\n        }\n\n        function register() {\n            const account = body;\n\n            if (accounts.find(x => x.email === account.email)) {\n                // display email already registered \"email\" in alert\n                setTimeout(() => {\n                    alertService.info(`\n                        <h4>Email Already Registered</h4>\n                        <p>Your email ${account.email} is already registered.</p>\n                        <p>If you don't know your password please visit the <a href=\"${location.origin}/account/forgot-password\">forgot password</a> page.</p>\n                        <div><strong>NOTE:</strong> The fake backend displayed this \"email\" so you can test without an api. A real backend would send a real email.</div>\n                    `, { autoClose: false });\n                }, 1000);\n\n                // always return ok() response to prevent email enumeration\n                return ok();\n            }\n\n            // assign account id and a few other properties then save\n            account.id = newAccountId();\n            if (account.id === 1) {\n                // first registered account is an admin\n                account.role = Role.Admin;\n            } else {\n                account.role = Role.User;\n            }\n            account.dateCreated = new Date().toISOString();\n            account.verificationToken = new Date().getTime().toString();\n            account.isVerified = false;\n            account.refreshTokens = [];\n            delete account.confirmPassword;\n            accounts.push(account);\n            localStorage.setItem(accountsKey, JSON.stringify(accounts));\n\n            // display verification email in alert\n            setTimeout(() => {\n                const verifyUrl = `${location.origin}/account/verify-email?token=${account.verificationToken}`;\n                alertService.info(`\n                    <h4>Verification Email</h4>\n                    <p>Thanks for registering!</p>\n                    <p>Please click the below link to verify your email address:</p>\n                    <p><a href=\"${verifyUrl}\">${verifyUrl}</a></p>\n                    <div><strong>NOTE:</strong> The fake backend displayed this \"email\" so you can test without an api. A real backend would send a real email.</div>\n                `, { autoClose: false });\n            }, 1000);\n\n            return ok();\n        }\n        \n        function verifyEmail() {\n            const { token } = body;\n            const account = accounts.find(x => !!x.verificationToken && x.verificationToken === token);\n            \n            if (!account) return error('Verification failed');\n            \n            // set is verified flag to true if token is valid\n            account.isVerified = true;\n            localStorage.setItem(accountsKey, JSON.stringify(accounts));\n\n            return ok();\n        }\n\n        function forgotPassword() {\n            const { email } = body;\n            const account = accounts.find(x => x.email === email);\n            \n            // always return ok() response to prevent email enumeration\n            if (!account) return ok();\n            \n            // create reset token that expires after 24 hours\n            account.resetToken = new Date().getTime().toString();\n            account.resetTokenExpires = new Date(Date.now() + 24*60*60*1000).toISOString();\n            localStorage.setItem(accountsKey, JSON.stringify(accounts));\n\n            // display password reset email in alert\n            setTimeout(() => {\n                const resetUrl = `${location.origin}/account/reset-password?token=${account.resetToken}`;\n                alertService.info(`\n                    <h4>Reset Password Email</h4>\n                    <p>Please click the below link to reset your password, the link will be valid for 1 day:</p>\n                    <p><a href=\"${resetUrl}\">${resetUrl}</a></p>\n                    <div><strong>NOTE:</strong> The fake backend displayed this \"email\" so you can test without an api. A real backend would send a real email.</div>\n                `, { autoClose: false });\n            }, 1000);\n\n            return ok();\n        }\n        \n        function validateResetToken() {\n            const { token } = body;\n            const account = accounts.find(x =>\n                !!x.resetToken && x.resetToken === token &&\n                new Date() < new Date(x.resetTokenExpires)\n            );\n            \n            if (!account) return error('Invalid token');\n            \n            return ok();\n        }\n\n        function resetPassword() {\n            const { token, password } = body;\n            const account = accounts.find(x =>\n                !!x.resetToken && x.resetToken === token &&\n                new Date() < new Date(x.resetTokenExpires)\n            );\n            \n            if (!account) return error('Invalid token');\n            \n            // update password and remove reset token\n            account.password = password;\n            account.isVerified = true;\n            delete account.resetToken;\n            delete account.resetTokenExpires;\n            localStorage.setItem(accountsKey, JSON.stringify(accounts));\n\n            return ok();\n        }\n\n        function getAccounts() {\n            if (!isAuthenticated()) return unauthorized();\n            return ok(accounts.map(x => basicDetails(x)));\n        }\n\n        function getAccountById() {\n            if (!isAuthenticated()) return unauthorized();\n\n            let account = accounts.find(x => x.id === idFromUrl());\n\n            // user accounts can get own profile and admin accounts can get all profiles\n            if (account.id !== currentAccount().id && !isAuthorized(Role.Admin)) {\n                return unauthorized();\n            }\n\n            return ok(basicDetails(account));\n        }\n\n        function createAccount() {\n            if (!isAuthorized(Role.Admin)) return unauthorized();\n\n            const account = body;\n            if (accounts.find(x => x.email === account.email)) {\n                return error(`Email ${account.email} is already registered`);\n            }\n\n            // assign account id and a few other properties then save\n            account.id = newAccountId();\n            account.dateCreated = new Date().toISOString();\n            account.isVerified = true;\n            account.refreshTokens = [];\n            delete account.confirmPassword;\n            accounts.push(account);\n            localStorage.setItem(accountsKey, JSON.stringify(accounts));\n\n            return ok();\n        }\n\n        function updateAccount() {\n            if (!isAuthenticated()) return unauthorized();\n\n            let params = body;\n            let account = accounts.find(x => x.id === idFromUrl());\n\n            // user accounts can update own profile and admin accounts can update all profiles\n            if (account.id !== currentAccount().id && !isAuthorized(Role.Admin)) {\n                return unauthorized();\n            }\n\n            // only update password if included\n            if (!params.password) {\n                delete params.password;\n            }\n            // don't save confirm password\n            delete params.confirmPassword;\n\n            // update and save account\n            Object.assign(account, params);\n            localStorage.setItem(accountsKey, JSON.stringify(accounts));\n\n            return ok(basicDetails(account));\n        }\n\n        function deleteAccount() {\n            if (!isAuthenticated()) return unauthorized();\n\n            let account = accounts.find(x => x.id === idFromUrl());\n\n            // user accounts can delete own account and admin accounts can delete any account\n            if (account.id !== currentAccount().id && !isAuthorized(Role.Admin)) {\n                return unauthorized();\n            }\n\n            // delete account then save\n            accounts = accounts.filter(x => x.id !== idFromUrl());\n            localStorage.setItem(accountsKey, JSON.stringify(accounts));\n            return ok();\n        }\n        \n        // helper functions\n\n        function ok(body?) {\n            return of(new HttpResponse({ status: 200, body }))\n                .pipe(delay(500)); // delay observable to simulate server api call\n        }\n\n        function error(message) {\n            return throwError({ error: { message } })\n                .pipe(materialize(), delay(500), dematerialize()); // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648);\n        }\n\n        function unauthorized() {\n            return throwError({ status: 401, error: { message: 'Unauthorized' } })\n                .pipe(materialize(), delay(500), dematerialize());\n        }\n\n        function basicDetails(account) {\n            const { id, title, firstName, lastName, email, role, dateCreated, isVerified } = account;\n            return { id, title, firstName, lastName, email, role, dateCreated, isVerified };\n        }\n\n        function isAuthenticated() {\n            return !!currentAccount();\n        }\n\n        function isAuthorized(role) {\n            const account = currentAccount();\n            if (!account) return false;\n            return account.role === role;\n        }\n\n        function idFromUrl() {\n            const urlParts = url.split('/');\n            return parseInt(urlParts[urlParts.length - 1]);\n        }\n\n        function newAccountId() {\n            return accounts.length ? Math.max(...accounts.map(x => x.id)) + 1 : 1;\n        }\n\n        function currentAccount() {\n            // check if jwt token is in auth header\n            const authHeader = headers.get('Authorization');\n            if (!authHeader.startsWith('Bearer fake-jwt-token')) return;\n\n            // check if token is expired\n            const jwtToken = JSON.parse(atob(authHeader.split('.')[1]));\n            const tokenExpired = Date.now() > (jwtToken.exp * 1000);\n            if (tokenExpired) return;\n\n            const account = accounts.find(x => x.id === jwtToken.id);\n            return account;\n        }\n\n        function generateJwtToken(account) {\n            // create token that expires in 15 minutes\n            const tokenPayload = { \n                exp: Math.round(new Date(Date.now() + 15*60*1000).getTime() / 1000),\n                id: account.id\n            }\n            return `fake-jwt-token.${btoa(JSON.stringify(tokenPayload))}`;\n        }\n\n        function generateRefreshToken() {\n            const token = new Date().getTime().toString();\n\n            // add token cookie that expires in 7 days\n            const expires = new Date(Date.now() + 7*24*60*60*1000).toUTCString();\n            document.cookie = `fakeRefreshToken=${token}; expires=${expires}; path=/`;\n\n            return token;\n        }\n\n        function getRefreshToken() {\n            // get refresh token from cookie\n            return (document.cookie.split(';').find(x => x.includes('fakeRefreshToken')) || '=').split('=')[1];\n        }\n    }\n}\n\nexport let fakeBackendProvider = {\n    // use fake backend in place of Http service for backend-less development\n    provide: HTTP_INTERCEPTORS,\n    useClass: FakeBackendInterceptor,\n    multi: true\n};","export * from './app.initializer';\nexport * from './auth.guard';\nexport * from './error.interceptor';\nexport * from './fake-backend';\nexport * from './jwt.interceptor';\nexport * from './must-match.validator';","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from '@environments/environment';\nimport { AccountService } from '@app/_services';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n    constructor(private accountService: AccountService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // add auth header with jwt if account is logged in and request is to the api url\n        const account = this.accountService.accountValue;\n        const isLoggedIn = account && account.jwtToken;\n        const isApiUrl = request.url.startsWith(environment.apiUrl);\n        if (isLoggedIn && isApiUrl) {\n            request = request.clone({\n                setHeaders: { Authorization: `Bearer ${account.jwtToken}` }\n            });\n        }\n\n        return next.handle(request);\n    }\n}","import { FormGroup } from '@angular/forms';\n\n// custom validator to check that two fields match\nexport function MustMatch(controlName: string, matchingControlName: string) {\n    return (formGroup: FormGroup) => {\n        const control = formGroup.controls[controlName];\n        const matchingControl = formGroup.controls[matchingControlName];\n\n        if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n            // return if another validator has already found an error on the matchingControl\n            return;\n        }\n\n        // set error on matchingControl if validation fails\n        if (control.value !== matchingControl.value) {\n            matchingControl.setErrors({ mustMatch: true });\n        } else {\n            matchingControl.setErrors(null);\n        }\n    }\n}","import { Role } from './role';\n\nexport class Account {\n    id: string;\n    title: string;\n    firstName: string;\n    lastName: string;\n    email: string;\n    role: Role;\n    jwtToken?: string;\n}","export class Alert {\n    id: string;\n    type: AlertType;\n    message: string;\n    autoClose: boolean;\n    keepAfterRouteChange: boolean;\n    fade: boolean;\n\n    constructor(init?:Partial<Alert>) {\n        Object.assign(this, init);\n    }\n}\n\nexport enum AlertType {\n    Success,\n    Error,\n    Info,\n    Warning\n}","export * from './account';\nexport * from './alert';\nexport * from './role';\n","export enum Role {\n    User = 'User',\n    Admin = 'Admin'\n}","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map, finalize } from 'rxjs/operators';\n\nimport { environment } from '@environments/environment';\nimport { Account } from '@app/_models';\n\nconst baseUrl = `${environment.apiUrl}/accounts`;\n\n@Injectable({ providedIn: 'root' })\nexport class AccountService {\n    private accountSubject: BehaviorSubject<Account>;\n    public account: Observable<Account>;\n\n    constructor(\n        private router: Router,\n        private http: HttpClient\n    ) {\n        this.accountSubject = new BehaviorSubject<Account>(null);\n        this.account = this.accountSubject.asObservable();\n    }\n\n    public get accountValue(): Account {\n        return this.accountSubject.value;\n    }\n\n    login(email: string, password: string) {\n        return this.http.post<any>(`${baseUrl}/authenticate`, { email, password }, { withCredentials: true })\n            .pipe(map(account => {\n                this.accountSubject.next(account);\n                this.startRefreshTokenTimer();\n                return account;\n            }));\n    }\n\n    logout() {\n        this.http.post<any>(`${baseUrl}/revoke-token`, {}, { withCredentials: true }).subscribe();\n        this.stopRefreshTokenTimer();\n        this.accountSubject.next(null);\n        this.router.navigate(['/account/login']);\n    }\n\n    refreshToken() {\n        return this.http.post<any>(`${baseUrl}/refresh-token`, {}, { withCredentials: true })\n            .pipe(map((account) => {\n                this.accountSubject.next(account);\n                this.startRefreshTokenTimer();\n                return account;\n            }));\n    }\n\n    register(account: Account) {\n        return this.http.post(`${baseUrl}/register`, account);\n    }\n\n    verifyEmail(token: string) {\n        return this.http.post(`${baseUrl}/verify-email`, { token });\n    }\n    \n    forgotPassword(email: string) {\n        return this.http.post(`${baseUrl}/forgot-password`, { email });\n    }\n    \n    validateResetToken(token: string) {\n        return this.http.post(`${baseUrl}/validate-reset-token`, { token });\n    }\n    \n    resetPassword(token: string, password: string, confirmPassword: string) {\n        return this.http.post(`${baseUrl}/reset-password`, { token, password, confirmPassword });\n    }\n\n    getAll() {\n        return this.http.get<Account[]>(baseUrl);\n    }\n\n    getById(id: string) {\n        return this.http.get<Account>(`${baseUrl}/${id}`);\n    }\n    \n    create(params) {\n        return this.http.post(baseUrl, params);\n    }\n    \n    update(id, params) {\n        return this.http.put(`${baseUrl}/${id}`, params)\n            .pipe(map((account: any) => {\n                // update the current account if it was updated\n                if (account.id === this.accountValue.id) {\n                    // publish updated account to subscribers\n                    account = { ...this.accountValue, ...account };\n                    this.accountSubject.next(account);\n                }\n                return account;\n            }));\n    }\n    \n    delete(id: string) {\n        return this.http.delete(`${baseUrl}/${id}`)\n            .pipe(finalize(() => {\n                // auto logout if the logged in account was deleted\n                if (id === this.accountValue.id)\n                    this.logout();\n            }));\n    }\n\n    // helper methods\n\n    private refreshTokenTimeout;\n\n    private startRefreshTokenTimer() {\n        // parse json object from base64 encoded jwt token\n        const jwtToken = JSON.parse(atob(this.accountValue.jwtToken.split('.')[1]));\n\n        // set a timeout to refresh the token a minute before it expires\n        const expires = new Date(jwtToken.exp * 1000);\n        const timeout = expires.getTime() - Date.now() - (60 * 1000);\n        this.refreshTokenTimeout = setTimeout(() => this.refreshToken().subscribe(), timeout);\n    }\n\n    private stopRefreshTokenTimer() {\n        clearTimeout(this.refreshTokenTimeout);\n    }\n}","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { Alert, AlertType } from '@app/_models';\n\n@Injectable({ providedIn: 'root' })\nexport class AlertService {\n    private subject = new Subject<Alert>();\n    private defaultId = 'default-alert';\n\n    // enable subscribing to alerts observable\n    onAlert(id = this.defaultId): Observable<Alert> {\n        return this.subject.asObservable().pipe(filter(x => x && x.id === id));\n    }\n\n    // convenience methods\n    success(message: string, options?: any) {\n        this.alert(new Alert({ ...options, type: AlertType.Success, message }));\n    }\n\n    error(message: string, options?: any) {\n        this.alert(new Alert({ ...options, type: AlertType.Error, message }));\n    }\n\n    info(message: string, options?: any) {\n        this.alert(new Alert({ ...options, type: AlertType.Info, message }));\n    }\n\n    warn(message: string, options?: any) {\n        this.alert(new Alert({ ...options, type: AlertType.Warning, message }));\n    }\n\n    // core alert method\n    alert(alert: Alert) {\n        alert.id = alert.id || this.defaultId;\n        alert.autoClose = (alert.autoClose === undefined ? true : alert.autoClose);\n        this.subject.next(alert);\n    }\n\n    // clear alerts\n    clear(id = this.defaultId) {\n        this.subject.next(new Alert({ id }));\n    }\n}","export * from './account.service';\nexport * from './alert.service';","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home';\nimport { AuthGuard } from './_helpers';\nimport { Role } from './_models';\n\nconst accountModule = () => import('./account/account.module').then(x => x.AccountModule);\nconst adminModule = () => import('./admin/admin.module').then(x => x.AdminModule);\nconst profileModule = () => import('./profile/profile.module').then(x => x.ProfileModule);\n\nconst routes: Routes = [\n    { path: '', component: HomeComponent, canActivate: [AuthGuard] },\n    { path: 'account', loadChildren: accountModule },\n    { path: 'profile', loadChildren: profileModule, canActivate: [AuthGuard] },\n    { path: 'admin', loadChildren: adminModule, canActivate: [AuthGuard], data: { roles: [Role.Admin] } },\n\n    // otherwise redirect to home\n    { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\nimport { AccountService } from './_services';\nimport { Account, Role } from './_models';\n\n@Component({ selector: 'app', templateUrl: 'app.component.html' })\nexport class AppComponent {\n    Role = Role;\n    account: Account;\n\n    constructor(private accountService: AccountService) {\n        this.accountService.account.subscribe(x => this.account = x);\n    }\n\n    logout() {\n        this.accountService.logout();\n    }\n}","<div class=\"app-container\" [ngClass]=\"{ 'bg-light': account }\">\n    <!-- main nav -->\n    <nav class=\"navbar navbar-expand navbar-dark bg-dark\" *ngIf=\"account\">\n        <div class=\"navbar-nav\">\n            <a routerLink=\"/\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\" class=\"nav-item nav-link\">Home</a>\n            <a routerLink=\"/profile\" routerLinkActive=\"active\" class=\"nav-item nav-link\">Profile</a>\n            <a *ngIf=\"account.role === Role.Admin\" routerLink=\"/admin\" routerLinkActive=\"active\" class=\"nav-item nav-link\">Admin</a>\n            <a (click)=\"logout()\" class=\"nav-item nav-link\">Logout</a>\n        </div>\n    </nav>\n\n    <!-- subnav router outlet -->\n    <router-outlet name=\"subnav\"></router-outlet>\n\n    <!-- global alert -->\n    <alert></alert>\n\n    <!-- main router outlet -->\n    <router-outlet></router-outlet>\n</div>\n","import { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\n// used to create fake backend\nimport { fakeBackendProvider } from './_helpers';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { JwtInterceptor, ErrorInterceptor, appInitializer } from './_helpers';\nimport { AccountService } from './_services';\nimport { AppComponent } from './app.component';\nimport { AlertComponent } from './_components';\nimport { HomeComponent } from './home';\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        AppRoutingModule\n    ],\n    declarations: [\n        AppComponent,\n        AlertComponent,\n        HomeComponent\n    ],\n    providers: [\n        { provide: APP_INITIALIZER, useFactory: appInitializer, multi: true, deps: [AccountService] },\n        { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n        { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n\n        // provider used to create fake backend\n        fakeBackendProvider\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }","import { Component } from '@angular/core';\n\nimport { AccountService } from '@app/_services';\n\n@Component({ templateUrl: 'home.component.html' })\nexport class HomeComponent {\n    account = this.accountService.accountValue;\n\n    constructor(private accountService: AccountService) { }\n}","<div class=\"p-4\">\n    <div class=\"container\">\n        <h1>Hi {{account.firstName}}!</h1>\n        <p>Have a look at my Sample <strong>Image Gallery</strong></p>\n\n\n        <div id=\"demo\" class=\"carousel slide\" data-ride=\"carousel\">\n\n            <!-- Indicators -->\n            <ul class=\"carousel-indicators\">\n                <li data-target=\"#demo\" data-slide-to=\"0\" class=\"active\"></li>\n                <li data-target=\"#demo\" data-slide-to=\"1\"></li>\n                <li data-target=\"#demo\" data-slide-to=\"2\"></li>\n                <li data-target=\"#demo\" data-slide-to=\"3\"></li>\n                <li data-target=\"#demo\" data-slide-to=\"4\"></li>\n                <li data-target=\"#demo\" data-slide-to=\"5\"></li>\n                <li data-target=\"#demo\" data-slide-to=\"6\"></li>\n                <li data-target=\"#demo\" data-slide-to=\"7\"></li>\n                <li data-target=\"#demo\" data-slide-to=\"8\"></li>\n                <li data-target=\"#demo\" data-slide-to=\"9\"></li>\n                <li data-target=\"#demo\" data-slide-to=\"10\"></li>\n                <li data-target=\"#demo\" data-slide-to=\"11\"></li>\n                <li data-target=\"#demo\" data-slide-to=\"12\"></li>\n\n            </ul>\n\n            <!-- The slideshow -->\n            <div class=\"carousel-inner\">\n                <div class=\"carousel-item active\">\n                    <img src=\"assets/images/1.jpg\" style=\"width: 100%\">\n                </div>\n                <div class=\"carousel-item\">\n                    <img src=\"assets/images/2.jpg\" style=\"width: 100%\">\n                </div>\n                <div class=\"carousel-item\">\n                    <img src=\"assets/images/3.jfif\" style=\"width: 100%\">\n                </div>\n                <div class=\"carousel-item\">\n                    <img src=\"assets/images/4.jfif\" style=\"width: 100%\">\n                </div>\n                <div class=\"carousel-item\">\n                    <img src=\"assets/images/5.jfif\" style=\"width: 100%\">\n                </div>\n                <div class=\"carousel-item\">\n                    <img src=\"assets/images/6.jfif\" style=\"width: 100%\">\n                </div>\n                <div class=\"carousel-item\">\n                    <img src=\"assets/images/7.jfif\" style=\"width: 100%\">\n                </div>\n                <div class=\"carousel-item\">\n                    <img src=\"assets/images/8.jfif\" style=\"width: 100%\">\n                </div>\n                <div class=\"carousel-item\">\n                    <img src=\"assets/images/9.jfif\" style=\"width: 100%\">\n                </div>\n                <div class=\"carousel-item\">\n                    <img src=\"assets/images/10.jfif\" style=\"width: 100%\">\n                </div>\n                <div class=\"carousel-item\">\n                    <img src=\"assets/images/11.jfif\" style=\"width: 100%\">\n                </div>\n                <div class=\"carousel-item\">\n                    <img src=\"assets/images/12.jfif\" style=\"width: 100%\">\n                </div>\n            </div>\n\n            <!-- Left and right controls -->\n            <a class=\"carousel-control-prev\" href=\"#demo\" data-slide=\"prev\">\n                <span class=\"carousel-control-prev-icon\"></span>\n            </a>\n            <a class=\"carousel-control-next\" href=\"#demo\" data-slide=\"next\">\n                <span class=\"carousel-control-next-icon\"></span>\n            </a>\n        </div>\n    </div>\n</div>","export * from './home.component';","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:4000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n    .catch(err => console.error(err));"],"sourceRoot":"webpack:///"}